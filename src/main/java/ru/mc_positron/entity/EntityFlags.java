package ru.mc_positron.entity;

public interface EntityFlags {

    int ONFIRE = 0;
    int SNEAKING = 1;
    int RIDING = 2;
    int SPRINTING = 3;
    int ACTION = 4;
    int INVISIBLE = 5;
    int TEMPTED = 6;
    int INLOVE = 7;
    int SADDLED = 8;
    int POWERED = 9;
    int IGNITED = 10;
    int BABY = 11; //disable head scaling
    int CONVERTING = 12;
    int CRITICAL = 13;
    int CAN_SHOW_NAMETAG = 14;
    int ALWAYS_SHOW_NAMETAG = 15;
    int IMMOBILE = 16, NO_AI = 16;
    int SILENT = 17;
    int WALLCLIMBING = 18;
    int CAN_CLIMB = 19;
    int SWIMMER = 20;
    int CAN_FLY = 21;
    int WALKER = 22;
    int RESTING = 23;
    int SITTING = 24;
    int ANGRY = 25;
    int INTERESTED = 26;
    int CHARGED = 27;
    int TAMED = 28;
    int ORPHANED = 29;
    int LEASHED = 30;
    int SHEARED = 31;
    int GLIDING = 32;
    int ELDER = 33;
    int MOVING = 34;
    int BREATHING = 35;
    int CHESTED = 36;
    int STACKABLE = 37;
    int SHOWBASE = 38;
    int REARING = 39;
    int VIBRATING = 40;
    int IDLING = 41;
    int EVOKER_SPELL = 42;
    int CHARGE_ATTACK = 43;
    int WASD_CONTROLLED = 44;
    int CAN_POWER_JUMP = 45;
    int CAN_DASH = 46;
    int LINGER = 47;
    int HAS_COLLISION = 48;
    int GRAVITY = 49;
    int FIRE_IMMUNE = 50;
    int DANCING = 51;
    int ENCHANTED = 52;
    int SHOW_TRIDENT_ROPE = 53; // tridents show an animated rope when enchanted with loyalty after they are thrown and return to their owner. To be combined with DATA_OWNER_EID
    int CONTAINER_PRIVATE = 54; //inventory is private, doesn't drop contents when killed if true
    int IS_TRANSFORMING = 55;
    int SPIN_ATTACK = 56;
    int SWIMMING = 57;
    int BRIBED = 58; //dolphins have this set when they go to find treasure for the player
    int PREGNANT = 59;
    int LAYING_EGG = 60;
    int RIDER_CAN_PICK = 61;
    int TRANSITION_SETTING = 62;
    int EATING = 63;
    int LAYING_DOWN = 64;
    int SNEEZING = 65;
    int TRUSTING = 66;
    int ROLLING = 67;
    int SCARED = 68;
    int IN_SCAFFOLDING = 69;
    int OVER_SCAFFOLDING = 70;
    int FALL_THROUGH_SCAFFOLDING = 71;
    int BLOCKING = 72;
    int TRANSITION_BLOCKING = 73;
    int BLOCKED_USING_SHIELD = 74;
    int BLOCKED_USING_DAMAGED_SHIELD = 75;
    int SLEEPING = 76;
    int ENTITY_GROW_UP = 77;
    int TRADE_INTEREST = 78;
    int DOOR_BREAKER = 79;
    int BREAKING_OBSTRUCTION = 80;
    int DOOR_OPENER = 81;
    int IS_ILLAGER_CAPTAIN = 82;
    int STUNNED = 83;
    int ROARING = 84;
    int DELAYED_ATTACK = 85;
    int IS_AVOIDING_MOBS = 86;
    int IS_AVOIDING_BLOCKS = 87;
    int FACING_TARGET_TO_RANGE_ATTACK = 88;
    int HIDDEN_WHEN_INVISIBLE = 89;
    int IS_IN_UI = 90;
    int STALKING = 91;
    int EMOTING = 92;
    int CELEBRATING = 93;
    int ADMIRING = 94;
    int CELEBRATING_SPECIAL = 95;
    int OUT_OF_CONTROL = 96;
    int RAM_ATTACK = 97;
    int PLAYING_DEAD = 98;
    int IN_ASCENDABLE_BLOCK = 99;
    int OVER_DESCENDABLE_BLOCK = 100;
    int CROAKING = 101;
    int EAT_MOB = 102;
    int JUMP_GOAL_JUMP = 103;
    int EMERGING = 104;
    int SNIFFING = 105;
    int DIGGING = 106;
    int SONIC_BOOM = 107;
    int HAS_DASH_COOLDOWN = 108;
    int PUSH_TOWARDS_CLOSEST_SPACE = 109;
}
